name: aws-deploy # Workflow 이름
on: # Event 감지
  push:
    branches: ["main"]

jobs: # Job 설정
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code. # Repo checkout
        uses: actions/checkout@v2

      - name: Check Node v # Node v 확인
        run: node -v

      - name: Install Dependencies # 의존 파일 설치
        run: npm install

      - name: Build # 빌드 명령어
        run: npm build:prod

      - name: Configure SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to EC2 # 워크플로우에서 빌드된 파일을 EC2 인스턴스로 전송
        run: |
          ssh -o "StrictHostKeyChecking=no" user@your-ec2-instance-ip 'mkdir -p /path/to/destination' 
          scp -o "StrictHostKeyChecking=no" -r build/* user@your-ec2-instance-ip:/path/to/destination/

# ssh -o "StrictHostKeyChecking=no" user@your-ec2-instance-ip
# SSH를 사용해서 EC2 인스턴스에 접속
# user : EC2 인스턴스에 접속할 사용자 계정
# your-ec2-instance-ip : EC2 인서튼스의 IP주소
# -o "StrictHostKeyChecking=no : 호스트 키 확인을 비활성화하여 자동으로 EC2 인스턴스의 호스트 키를 신뢰하도록 설정
# mkdir -p /path/to/destination : EC2 인스턴스에 있는 /path/to/destination 디렉토리를 생성, 이 디렉토리는 빌드된 파일들을 저장할 경로
# -p : p 옵션은 디렉토리가 이미 존재하는 경우에도 오류가 발생하지 않도록 합니다.

# scp -o "StrictHostKeyChecking=no" -r build/* user@your-ec2-instance-ip:/path/to/destination/
# 로컬에서 빌드된 파일들을 EC2 인스턴스의 /path/to/destination/ 디렉토리로 복사
# scp : 파일과 디렉토리를 복사하는데 사용
# -o "StrictHostKeyChecking=no : 호스트 키 확인을 비활성화하여 자동으로 EC2 인스턴스의 호스트 키를 신뢰하도록 설정
# -r : 디렉토리를 재귀적으로 복사

# user@your-ec2-instance-ip : 실제 EC2 인스턴스의 사용자 계정과 IP 조소로 변경
# /path/to/destination/ : 전송할 디렉토리 경로로 수정
